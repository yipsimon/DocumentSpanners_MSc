digraph {
	rankdir=LR size="8,5"
	node [shape=doublecircle]
	"(3, \"('2', 'C')\")"
	node [shape=circle]
	"(0, \"('0', 'C')\")" -> "(1, \"('1', 'C')\")" [label="['o', 'c']"]
	"(0, \"('0', 'C')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('0', 'C')\")" -> "(1, \"('0', 'C')\")" [label="['w', 'c']"]
	"(0, \"('2', 'B')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('2', 'B')\")" -> "(1, \"('2', 'B')\")" [label="['c', 'o']"]
	"(2, \"('2', 'A')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(2, \"('1', 'B')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	q0 -> "(0, \"('0', 'A')\")" [label="['w', 'w']"]
	q0 -> "(0, \"('0', 'B')\")" [label="['w', 'o']"]
	q0 -> "(0, \"('2', 'C')\")" [label="['c', 'c']"]
	q0 -> "(0, \"('2', 'B')\")" [label="['c', 'o']"]
	q0 -> "(0, \"('2', 'A')\")" [label="['c', 'w']"]
	q0 -> "(0, \"('1', 'C')\")" [label="['o', 'c']"]
	q0 -> "(0, \"('1', 'A')\")" [label="['o', 'w']"]
	q0 -> "(0, \"('1', 'B')\")" [label="['o', 'o']"]
	q0 -> "(0, \"('0', 'C')\")" [label="['w', 'c']"]
	"(1, \"('2', 'A')\")" -> "(2, \"('2', 'A')\")" [label="['c', 'w']"]
	"(1, \"('2', 'A')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('2', 'A')\")" -> "(2, \"('2', 'B')\")" [label="['c', 'o']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('0', 'A')\")" [label="['w', 'w']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('0', 'B')\")" [label="['w', 'o']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('2', 'B')\")" [label="['c', 'o']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('2', 'A')\")" [label="['c', 'w']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('1', 'C')\")" [label="['o', 'c']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('1', 'A')\")" [label="['o', 'w']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('1', 'B')\")" [label="['o', 'o']"]
	"(0, \"('0', 'A')\")" -> "(1, \"('0', 'C')\")" [label="['w', 'c']"]
	"(0, \"('2', 'C')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(2, \"('0', 'B')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(2, \"('0', 'A')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(2, \"('2', 'C')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('0', 'A')\")" [label="['w', 'w']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('0', 'B')\")" [label="['w', 'o']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('2', 'B')\")" [label="['c', 'o']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('2', 'A')\")" [label="['c', 'w']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('1', 'C')\")" [label="['o', 'c']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('1', 'A')\")" [label="['o', 'w']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('1', 'B')\")" [label="['o', 'o']"]
	"(1, \"('0', 'A')\")" -> "(2, \"('0', 'C')\")" [label="['w', 'c']"]
	"(0, \"('1', 'A')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('1', 'A')\")" -> "(1, \"('2', 'B')\")" [label="['c', 'o']"]
	"(0, \"('1', 'A')\")" -> "(1, \"('2', 'A')\")" [label="['c', 'w']"]
	"(0, \"('1', 'A')\")" -> "(1, \"('1', 'C')\")" [label="['o', 'c']"]
	"(0, \"('1', 'A')\")" -> "(1, \"('1', 'A')\")" [label="['o', 'w']"]
	"(0, \"('1', 'A')\")" -> "(1, \"('1', 'B')\")" [label="['o', 'o']"]
	"(1, \"('1', 'A')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('1', 'A')\")" -> "(2, \"('2', 'B')\")" [label="['c', 'o']"]
	"(1, \"('1', 'A')\")" -> "(2, \"('2', 'A')\")" [label="['c', 'w']"]
	"(1, \"('1', 'A')\")" -> "(2, \"('1', 'C')\")" [label="['o', 'c']"]
	"(1, \"('1', 'A')\")" -> "(2, \"('1', 'A')\")" [label="['o', 'w']"]
	"(1, \"('1', 'A')\")" -> "(2, \"('1', 'B')\")" [label="['o', 'o']"]
	"(1, \"('2', 'C')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('1', 'B')\")" -> "(2, \"('1', 'B')\")" [label="['o', 'o']"]
	"(1, \"('1', 'B')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('1', 'B')\")" -> "(2, \"('1', 'C')\")" [label="['o', 'c']"]
	"(1, \"('1', 'B')\")" -> "(2, \"('2', 'B')\")" [label="['c', 'o']"]
	"(0, \"('2', 'A')\")" -> "(1, \"('2', 'A')\")" [label="['c', 'w']"]
	"(0, \"('2', 'A')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('2', 'A')\")" -> "(1, \"('2', 'B')\")" [label="['c', 'o']"]
	"(2, \"('2', 'B')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('0', 'C')\")" -> "(2, \"('1', 'C')\")" [label="['o', 'c']"]
	"(1, \"('0', 'C')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('0', 'C')\")" -> "(2, \"('0', 'C')\")" [label="['w', 'c']"]
	"(1, \"('1', 'C')\")" -> "(2, \"('1', 'C')\")" [label="['o', 'c']"]
	"(1, \"('1', 'C')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('2', 'B')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('2', 'B')\")" -> "(2, \"('2', 'B')\")" [label="['c', 'o']"]
	"(2, \"('1', 'C')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(2, \"('0', 'C')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('0', 'B')\")" -> "(1, \"('0', 'B')\")" [label="['w', 'o']"]
	"(0, \"('0', 'B')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('0', 'B')\")" -> "(1, \"('2', 'B')\")" [label="['c', 'o']"]
	"(0, \"('0', 'B')\")" -> "(1, \"('1', 'C')\")" [label="['o', 'c']"]
	"(0, \"('0', 'B')\")" -> "(1, \"('1', 'B')\")" [label="['o', 'o']"]
	"(0, \"('0', 'B')\")" -> "(1, \"('0', 'C')\")" [label="['w', 'c']"]
	"(0, \"('1', 'B')\")" -> "(1, \"('1', 'B')\")" [label="['o', 'o']"]
	"(0, \"('1', 'B')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('1', 'B')\")" -> "(1, \"('1', 'C')\")" [label="['o', 'c']"]
	"(0, \"('1', 'B')\")" -> "(1, \"('2', 'B')\")" [label="['c', 'o']"]
	"(2, \"('1', 'A')\")" -> "(3, \"('2', 'C')\")" [label="['c', 'c']"]
	"(0, \"('1', 'C')\")" -> "(1, \"('1', 'C')\")" [label="['o', 'c']"]
	"(0, \"('1', 'C')\")" -> "(1, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('0', 'B')\")" -> "(2, \"('0', 'B')\")" [label="['w', 'o']"]
	"(1, \"('0', 'B')\")" -> "(2, \"('2', 'C')\")" [label="['c', 'c']"]
	"(1, \"('0', 'B')\")" -> "(2, \"('2', 'B')\")" [label="['c', 'o']"]
	"(1, \"('0', 'B')\")" -> "(2, \"('1', 'C')\")" [label="['o', 'c']"]
	"(1, \"('0', 'B')\")" -> "(2, \"('1', 'B')\")" [label="['o', 'o']"]
	"(1, \"('0', 'B')\")" -> "(2, \"('0', 'C')\")" [label="['w', 'c']"]
}
